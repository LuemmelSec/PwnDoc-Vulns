- cvssv3: 'CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L'
  priority: 2
  remediationComplexity: 1
  category: Internal Pentest
  details:
    - locale: EN
      title: Shared platform usage
      vulnType: Pentest
      description: >-
        <p>Running services with shared resources carries the risk that if one
        of the apps is vulnerable or exploitable, all others are at risk as
        well. More services most likely means that more users have access to the
        system, but these user don't necessary have the rights to access the
        other solutions running on that system. However, the compromise of the
        user of another service, might give an attacker a first foothold on the
        shared system, which later might result in a full compromise of all
        hosted services.</p><p>For critical service like e.g. a Certificate
        Authority, Domain Services, Backup solutions, it is best practice to
        have them running on dedicated systems.</p>
      remediation: <p>Migrate the affected service to a dedicated platform.</p>
      references: []
      customFields: []

- cvssv3: 'CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H'
  priority: 3
  remediationComplexity: 3
  category: Internal Pentest
  details:
    - references:
        - >-
          https://learn.microsoft.com/en-us/security/compass/privileged-access-access-model
      locale: EN
      title: Missing Network Seperation
      vulnType: Pentest
      description: >-
        <p>Using network segmentation and separation together offers an
        additional level of security to systems and data. <br>A robust ‘defense
        in depth’ network enhances security by physically and virtually ensuring
        data flow and connectivity within networks is for known and approved
        connections only. It controls who can access which resource from
        where.</p><ul><li><p>Network segmentation involves breaking down an
        organization's network into smaller networks, using DMZ’s and other
        logical segmentation (like Production/Test) to logically segment
        processing activity.</p></li><li><p>Network separation means using
        different access controls to allow connections across these smaller
        networks. This can be by employing different technologies and filters to
        further control data flow.</p></li></ul><p>These measures make it harder
        for an attacker to move laterally and access unwanted and critical
        resources, once he gained an initial foothold in the internal
        network.<br><br>Access to critical infrastructure like Domain
        Controllers, Certificate Authorities, Backup solutions and alike, should
        be secured as much as possible.</p>
      remediation: >-
        <p>Systems that can be accessed from the Internet should always be
        placed in a demilitarized zone (DMZ), as these systems are exposed to an
        increased risk.</p><p>It is recommended to divide the systems into
        different TIER levels, in which the sensitivity and criticality of the
        servers is differentiated. Direct access by clients to services is
        enabled in a specific TIER level, the other TIER levels can only be
        accessed from the next lower level and are separated in each
        case.</p><p>The bare minimum that should be implemented is a network
        separation between the client and server networks. This will better
        protect the server network from automated attacks by executed malware
        (for example, ransomware) on clients, as well as from network
        attacks.</p>
      customFields: []

- cvssv3: 'CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L'
  priority: 3
  remediationComplexity: 1
  category: Internal Pentest
  details:
    - locale: EN
      title: SMB Signing not activated
      vulnType: Vulnerability Scan
      description: >-
        <p>SMB (Server Message Block) signing is a security feature that is used
        to digitally sign SMB packets to ensure their authenticity and
        integrity. <br>This helps to prevent man-in-the-middle (MitM) attacks,
        where an attacker intercepts and modifies SMB packets in transit, by
        allowing the recipient to verify that the packets were sent by an
        authenticated sender and have not been tampered with. <br>The most
        widely known attack that abuses the lack of SMB signing is
        relaying.<br>SMB signing can be enabled or disabled on both the client
        and server side and is supported on Windows Server and Windows client
        operating systems. It is typically used in enterprise environments to
        secure file sharing and other types of data transfer over the
        network.</p>
      remediation: >-
        <p>SMB signing should be enabled and enforced on both the client and
        server side.</p>
      references:
        - 'https://luemmelsec.github.io/Relaying-101/'
      customFields: []

- cvssv3: 'CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N'
  priority: 1
  remediationComplexity: 1
  category: Internal Pentest
  details:
    - references: []
      locale: EN
      title: Usage of untrusted Certificates
      vulnType: Vulnerability Scan
      description: >-
        <p>The reason that a certificate is considered untrustworthy can have
        different causes. In the following scenarios, a certificate might be
        detected as not valid:</p><ul><li><p>The server's certificate does not
        have a valid certificate chain to a trusted root certificate authority.
        This happens if the certificate was issued by an unrecognized
        certificate authority, if the certificate is a self-signed certificate,
        or if an intermediate certificate is missing from the certificate
        chain.</p></li><li><p>The commonName (CN) parameter of the certificate
        does not match the domain name of the server. This might happen if the
        IP is used instead for the DNS name.</p></li><li><p>The signature of the
        certificate could not be verified.</p></li><li><p>A certificate is
        invalid if the server's certificate has expired, i.e. during
        verification the certificate's valid date range does not match the
        current date.</p></li></ul><p>These issues make it difficult for users
        to verify the certificate and increase the risk of Man-in-the-Middle
        attacks.</p>
      remediation: >-
        <p>Create and apply trusted certificates.<br>Internet facing systems
        should have a certificate signed by a 3rd party trusted public CA.</p>
      customFields: []

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N'
  priority: 2
  remediationComplexity: 2
  category: Internal Pentest
  details:
    - references:
        - 'https://nvd.nist.gov/vuln/detail/CVE-2000-1200'
      locale: EN
      title: Unauthenticated User Enumeration over SMB - CVE-2000-1200
      vulnType: Vulnerability Scan
      description: >-
        <p>Windows NT allows remote attackers to list all users in a domain by
        obtaining the domain SID with the <em>LsaQueryInformationPolicy</em>
        policy function via a null session and using the SID to list the
        users.</p>
      remediation: >-
        <p>Contact the vendor to see if appropriate settings, updates or fixes
        are available.</p>
      customFields: []

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H'
  priority: 4
  remediationComplexity: 1
  category: Internal Pentest
  details:
    - references: []
      locale: EN
      title: Extremely weak Admin Credentials
      vulnType: Pentest
      description: >-
        <p>Accounts with critical privileges like Domain Admins, Firewall
        Admins, Backup Admins and alike should always be handled with care and
        secured accordingly.<br>People using these accounts need to be aware of
        the potential risks that arise when their accounts get
        compromised:</p><ul><li><p>Data breaches and theft of sensitive
        information: If a hacker gains access to an administrative account, they
        may be able to view, steal or manipulate confidential data stored on the
        system, such as personal information, financial records, or trade
        secrets.</p></li><li><p>System damage and disruption of services: The
        attacker may use the administrative privileges to cause harm to the
        system, for example, by deleting critical files, modifying system
        settings, or shutting down servers. This could result in significant
        downtime and disruption of services for the organization and its
        customers.</p></li><li><p>Spread of malware and further compromise: The
        attacker may use the compromised administrative account to install
        malware, such as viruses, Trojans, or ransomware, which can spread to
        other systems and devices on the network, leading to additional security
        breaches and compromise. This could result in significant damage to the
        organization's reputation and financial loss.</p></li></ul><p>In this
        case the password complexity of these administrative accounts must be
        rated as extremely weak. <br>The password is either guessable or if an
        attacker gets a hold on hashed material easily recoverable.</p>
      remediation: >-
        <p>Privileged accounts should have extremely strong passwords. They
        should be at least 20 characters long, and comply to complexity with
        uppercase, lowercase, numbers and special characters. The passwords
        should be randomly generated, no words! Password blacklisting can be
        issued to help here.<br>Password reusage should be avoided at all
        costs.<br>Personal holding higher privileges needs to be trained and
        made aware of the possible risks. <br>Saving credentials in a Web
        Browser should also be avoided.<br>Additionally these accounts should be
        hardened via Multi Factor Authentication where possible.</p>
      customFields: []

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H'
  priority: 3
  remediationComplexity: 3
  category: Internal Pentest
  details:
    - references:
        - >-
          https://learn.microsoft.com/en-us/security/privileged-access-workstations/privileged-access-access-model
      locale: EN
      title: Deficient Roles and Authorization Concept
      vulnType: Pentest
      description: >-
        <p>A Roles and Authorization Concept purpose is to restrict access to
        sensitive resources as much as possible.<br>This can be achieved through
        appropriate measures like e.g.:</p><ul><li><p>Limiting the number of
        users that have access to the resource</p></li><li><p>Limiting the
        access rights to the absolute minimum each user needs - concept of least
        privilege</p></li><li><p>Limiting the sources which have access - e.g.
        from where can a valid user access an
        application</p></li><li><p>Defining a password policy and MFA
        requirements</p></li></ul><p></p>
      remediation: >-
        <p>Implement a sufficient and secure Roles and Authorization
        concept.<br>Review the access rights to the systems.<br>Change
        passwords.<br>Follow best practices like the TIER model from
        Microsoft.</p>
      customFields: []

- cvssv3: 'CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:L/I:L/A:N'
  priority: 3
  remediationComplexity: 1
  category: Internal Pentest
  details:
    - references:
        - ''
      locale: EN
      title: Outdated Software
      vulnType: Pentest
      description: >-
        <p>Used soft- and firmware as well as operating systems should always be
        kept to the most current versions.</p><p>Using outdated versions poses
        several direct and indirect security risks like:<br>- Security
        vulnerabilities: outdated software may have unpatched security holes
        that can be exploited by attackers.<br>- Compatibility issues: new
        hardware or software may not be compatible with old systems.<br>-
        Performance degradation: outdated software may run slower, become less
        responsive, or crash more often.<br>- Lack of features: newer software
        may have additional features or improvements that are not available in
        older versions.<br>- Compliance problems: outdated software may not meet
        industry regulations or standards.<br><br>So staying up to date is a
        mandatory requirement to a matured security culture and should be part
        of the patch management process.<br></p>
      observation: >-
        <p><br>Criticality depending on what could be achieved due to systems
        and software being outdated.</p>
      remediation: >-
        <p>Check if any of the mentioned software components can be upgraded /
        updated and if important security updates are missing.<br>Implement a
        patch management strategy and process that ensures that all your systems
        are up to date and that updates are applied timely according to their
        criticality.<br>Apply workarounds when no patches are available when
        tackling critical flaws.</p>
      customFields: []

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H'
  priority: 3
  remediationComplexity: 2
  category: Internal Pentest
  details:
    - locale: EN
      title: Password Requirements
      vulnType: Pentest
      description: >-
        <p>Using weak passwords has several security implications and is posing
        one of the biggest risks in the IT security threat landscape with the
        following impacts:<br></p><ul><li><p>Easy to guess: Bad passwords are
        often easily predictable, making it easier for hackers to guess or crack
        them.</p></li><li><p>Dictionary attacks: Poor passwords are susceptible
        to dictionary attacks, where a hacker uses a list of commonly used
        passwords to gain access to an account.</p></li><li><p>Brute force
        attacks: In a brute force attack, a hacker tries every possible
        combination of characters to crack a password, making a weak password
        easier to crack.</p></li><li><p>Reuse: People often reuse the same
        password across multiple accounts, putting all their information at risk
        if a single password is compromised.</p></li><li><p>...</p><p></p><p>If
        the passwords used by the users are not complex enough they can easily
        be guessed or the clear text passwords can trivially be recovered if an
        attacker gets access to their hashed values.</p></li></ul>
      remediation: >-
        <p>The following settings and measures can help to harden access to
        users and their credentials:</p><ul><li><p>Implementing multi-factor
        authentication.</p></li><li><p>Implementing a secure domain wide
        password policy in case of Active Directory. At least 12 characters for
        low privileged and 14 characters for high privileged accounts. For
        service accounts at least 20 characters should be
        used.</p></li><li><p>Using a password manager. Best in combination with
        the possibility for fine granular rights management and MFA
        authentication.</p></li><li><p>Password blacklisting. Ban passwords with
        the company name, seasons, passwords on leaked lists
        etc.</p></li><li><p>Implementing password policies based on the access
        rights of the accounts affected.</p></li><li><p>Regular password
        audits.</p></li><li><p>User awareness campaigns. Especially security
        related trainings for technical staff.</p><p></p></li></ul><p>Best
        practices for the Domain Password
        Policy:</p><ul><li><p>ComplexityEnabled =
        True</p></li><li><p>LockoutDuration &gt;= 15
        Minutes</p></li><li><p>LockoutObservationWindow &gt;= 15
        Minutes</p></li><li><p>LockoutThreshold &lt;= 10
        Minutes</p></li><li><p>MinPasswordLength &gt;=
        12</p></li><li><p>ReversibleEncryptionEnabled =
        False</p></li></ul><p><br></p>
      references: []
      customFields: []

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L'
  priority: 2
  remediationComplexity: 2
  category: Internal Pentest
  details:
    - references:
        - >-
          [1]
          https://learn.microsoft.com/en-us/windows/win32/winrm/authentication-for-remote-connections
        - >-
          [2]
          https://learn.microsoft.com/en-us/windows/win32/winrm/installation-and-configuration-for-windows-remote-management
      locale: EN
      title: Management Service Misconfiguration
      vulnType: Pentest
      description: >-
        <p>Management services like SSH, RDP, Telnet, WinRM etc. are meant for
        administrative purposes of systems and applications.<br>Access to those
        services should be restricted as much as possible to follow the
        defense-in-depth approach as well as the least privilege
        principle.<br>Even if not currently affected by a directly exploitable
        vulnerability, they at least pose the risk of being accessed with stolen
        / impersonated identities.</p>
      remediation: >-
        <p>Access to management services and their according ports should be
        restricted by means of network separation or (local) firewalls. <br>Most
        of these services offer hardened authentication methods and settings
        like certificate based authentication for SSH or restricted host polices
        for access to WinRM [1][2].<br>Systems ideally reside in a dedicated
        management VLAN to which only the needed systems and people can connect
        to.</p>
      customFields: []

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N'
  priority: 2
  remediationComplexity: 2
  category: Internal Pentest
  details:
    - locale: EN
      title: Servers with Internet Access
      vulnType: Pentest
      description: >-
        <p>Not restricting internet access to systems poses several potential
        security risks like:</p><ul><li><p>Malware can be downloaded directly
        onto the system's disk</p></li><li><p>Malware can be downloaded directly
        into the system's memory</p></li><li><p>The system can be connected and
        controlled via an internet hosted Command &amp; Control server or a
        Botnet</p></li></ul><p>Especially servers that don't necessarily need
        access to the internet should not be given these possibilities.<br></p>
      remediation: >-
        <p>Internet access must only be granted if absolutely necessary.<br>If
        needed, there should be dedicated communication-matrix and only targets
        that need to be reachable should me made available.<br>If really needed,
        the internet traffic should be routed through a firewall or proxy that
        analyzes the dataflow and connections made. <br>It should be able to
        block access and isolate the host in case something suspicious pops
        up.</p>
      references: []
      customFields: []

- cvssv3: 'CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:L'
  priority: 3
  remediationComplexity: 1
  category: Internal Pentest
  details:
    - references: []
      locale: EN
      title: General Observations Work Ethics
      vulnType: Pentest
      description: >-
        <p>Sensitive files should always be handled with care. Cleaning up when
        files are no longer used is an essential part of work ethics.</p><p>For
        attackers, valuable information residing inside such files comes in
        handy and can drastically expose further services and systems, allowing
        for privilege escalation or lateral movement.</p>
      observation: >-
        <p>Critically dependant on the info found and according
        possibilities</p>
      remediation: >-
        <p>Technical staff should be trained and forced to clean up after their
        work is done.<br>Leaving sensitive info exposed on systems is bad
        practice and should be avoided at all costs.</p>
      customFields: []

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N'
  priority: 3
  remediationComplexity: 2
  category: Internal Pentest
  details:
    - references: []
      locale: EN
      title: General Observations in regard to Alerts
      vulnType: Pentest
      description: >-
        <p>Critical systems and events should be monitored closely to be able to
        react on a shorthand if something bad happens.</p><p>Having visibility
        inside the whole network is a crucial fundamental of a matured
        IT-Security strategy.</p>
      observation: <p></p><p></p>
      remediation: >-
        <p>Logs and events need to be monitored closely. If critical alerts show
        up, according investigations and countermeasures need to take place.</p>
      customFields: []

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H'
  priority: 4
  remediationComplexity: 3
  details:
    - locale: EN
      title: MSSQL Features xp_*** available to low privileged Users
      vulnType: Pentest
      description: >-
        <p>xp_cmdshell, xp_dirtree and xp_fileexist are MSSQL native extended
        stored procedures. While xp_cmdshell allows for executing shell
        commands, the latter ones are aimed at file and directory
        operations.</p><p>xp_cmdshell: This extended stored procedure enables
        the execution of operating system commands from within SQL Server. If
        accessible to low privilege users, it poses significant security risks.
        Exploiting xp_cmdshell, an attacker can execute arbitrary commands on
        the server's operating system with the permissions of the SQL Server
        service account. This can lead to unauthorized actions, such as
        accessing or modifying sensitive files, compromising the system, or even
        gaining full control over the server.</p><p>xp_dirtree and xp_filexist
        can be executed by members of the Public role by default in SQL Server
        2000-2014. The public role is essentially a group that includes all
        database users by default. Both can be used to force the SQL Server
        service account to authenticate to a remote attacker.&nbsp; The service
        account password hash can then be captured + cracked or relayed to gain
        unauthorized access to systems. This also means they can be used to
        escalate a lower privileged user to sysadmin when a machine or managed
        account isn't being used.&nbsp;That's because the SQL Server service
        account is a member of the sysadmin role in SQL Server 2000-2014, by
        default. Also, if the service accounts happen to be local administrators
        on the servers themselves, an attacker can takeover those as well.</p>
      remediation: >-
        <p>There are several points to take into consideration
        here:</p><ul><li><p>It must URGENTLY be avoided to reuse service
        accounts. If really needed, there should be a dedicated service account
        per SQL server. If possible the computeraccount should be used.
        Alternateively managed service accounts per instance.</p></li><li><p>It
        must URGENTLY be avoided that (MSSQL) service accounts also hold local
        admin rights on servers. This needs to be checked on ALL (not only the
        ones listed) servers.</p></li><li><p>ALL (not only the ones listed)
        instances where the xp_ procedures are available to low privileged users
        have to be identified and the permissions need to be adjusted according
        to the principle of least privilege.</p></li><li><p>ALL (not only the
        ones listed) instances where ALL domain users have access to have to be
        identified and evaluated if those broadly applied rights are really
        needed. Adjustment has to be made according to the principle of least
        privilege.</p></li><li><p>SMB Signing MUST be enabled on ALL servers,
        not only MSSQL servers. Best would be to do it domain wide, also on
        clients.</p></li><li><p>Robust AV MUST be in place that prevents attacks
        via malware.</p></li><li><p>Monitoring for critical events MUST be in
        place and reactions and countermeasures MUST take place
        immediately.</p></li><li><p>TIERing MUST be implemented. Access to
        servers is to be applied according to the principle of least
        privilege.</p></li></ul>
      references:
        - 'https://www.offsec-journey.com/post/attacking-ms-sql-servers'
        - >-
          https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/abusing-ad-mssql
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H'
  priority: 4
  remediationComplexity: 3
  details:
    - locale: EN
      title: Shared Service Accounts
      vulnType: Pentest
      description: >-
        <p>Using shared service accounts can pose security risks due to the
        following reasons:</p><ul><li><p>Lack of Accountability: When multiple
        services or applications use the same service account, it becomes
        difficult to determine which service or application performed a
        particular action. This lack of accountability can hinder incident
        response and make it challenging to identify the source of unauthorized
        or malicious activities.</p></li><li><p>Overprivileged Access: Shared
        service accounts often have elevated privileges to perform various tasks
        across different systems or applications. If an attacker gains access to
        a shared service account, they inherit all the privileges associated
        with it, potentially granting them widespread access to sensitive data
        or critical systems. The principle of least privilege is compromised
        when using shared service accounts, as multiple services may have more
        access than they actually require.</p></li><li><p>Password Management
        Challenges: Shared service accounts typically have long lifetimes and
        are seldom changed or updated, which increases the risk of password
        compromise. If the password for a shared service account is compromised,
        all the services using that account are also compromised. Additionally,
        updating the password for a shared service account can be challenging
        due to its wide usage, leading to delayed or neglected password
        changes.</p></li><li><p>Difficulty in Monitoring and Auditing:
        Monitoring and auditing become more challenging when multiple services
        share the same account. It becomes difficult to attribute specific
        actions to individual services or track activities associated with the
        account. This can impede security investigations, compliance audits, and
        the ability to detect and respond to security incidents
        effectively.</p></li><li><p>Dependency Risks: When multiple services
        rely on a shared service account, any disruption or compromise of the
        account can have a cascading effect on all the dependent services. A
        single security incident or misconfiguration can result in widespread
        service disruptions or unauthorized access to critical
        systems.</p></li></ul>
      remediation: >-
        <p>To mitigate these risks, it is generally recommended to use
        individual service accounts with unique credentials for each service or
        application. This allows for better accountability, enables fine-grained
        access control, simplifies auditing and monitoring, and reduces the
        impact of a compromised account to a single service or application.</p>
      references: []
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N'
  priority: 2
  remediationComplexity: 1
  details:
    - locale: EN
      title: SPN Remnants
      vulnType: Pentest
      description: >-
        <p>SPN stands for Service Principal Name, and it is a concept in a
        Windows environment, particularly within Active Directory (AD). An SPN
        is a unique identifier for a service instance that runs under a specific
        user account. It is used by clients to identify and authenticate the
        service they are trying to access.</p><p>Here are some key points about
        SPNs in a Windows environment/AD:</p><ul><li><p>Purpose: The primary
        purpose of an SPN is to associate a service with a specific account in
        order to facilitate mutual authentication. When a client wants to
        communicate with a service, it can use the SPN to locate and
        authenticate the service.</p></li><li><p>Format: An SPN is composed of
        two parts: the service class and the service name, separated by a
        forward slash (/). The service class identifies the type of service,
        such as "HTTP" for a web service or "MSSQLSvc" for a SQL Server service.
        The service name is the fully qualified domain name (FQDN) or the
        NetBIOS name of the server hosting the service.</p></li><li><p>Unique
        Identifiers: Each service instance running under a specific user account
        should have a unique SPN associated with it. This allows clients to
        differentiate between different instances of the same service running on
        different servers.</p></li><li><p>Kerberos Authentication: SPNs are
        primarily used with Kerberos authentication in a Windows environment.
        When a client needs to authenticate to a service using Kerberos, it
        requests a ticket-granting ticket (TGT) from the Key Distribution Center
        (KDC) using the SPN associated with the service. The SPN helps the KDC
        locate the appropriate service account to authenticate the client
        against.</p></li><li><p>Registering SPNs: Service accounts can register
        their SPNs automatically or manually. Automatic registration occurs when
        services start up and utilize the Network Service or Local System
        accounts. Manual registration is required when using custom service
        accounts.</p></li><li><p>Duplicate SPNs: Each SPN must be unique within
        a domain to avoid conflicts. Duplicate SPNs can cause authentication
        failures or unpredictable behavior. It's important to ensure that
        different services or instances use distinct
        SPNs.</p></li><li><p>Delegation: SPNs also play a role in delegation
        scenarios, where a service needs to forward a client's credentials to
        another service on behalf of the client. Service accounts require proper
        configuration, including the appropriate SPNs and delegation settings,
        to enable secure delegation.</p></li></ul><p>In summary, SPNs in a
        Windows environment/AD are unique identifiers used to associate services
        with specific user accounts for authentication purposes, primarily in
        the context of Kerberos authentication. They help clients locate and
        authenticate the services they want to access while ensuring secure and
        accurate identification of the service instances.<br><br>In some
        circumstances, mainly when SPNs get registered manually with the help of
        the <a target="_blank" rel="noopener noreferrer nofollow"
        href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc731241(v=ws.11)">setspn</a>
        tool, or when the machine is not able to unregister SPNs for several
        reasons while being decommissioned, you might have dead SPNs in your
        environment.<br><br>These dead SPNs can still be used to conduct
        Kerberoasting attacks. When SPNs are tied to use accounts rather than to
        computer objects, it might be the case that the password is weak. With
        the Kerberoasting attack the cleartext credentials can then be
        retrieved.</p>
      observation: >-
        <p>Criticality depends on what is possible.<br>If we can kerberoast
        accounts where no actual service is running but which still have an SPN
        and are admin or sth, this would be high/critical.<br>If they have
        strong passwords and nothing can be done, medium to low.</p>
      remediation: >-
        <p>Remove ALL SPNs that are pointing to systems that no longer exist.
        This has do be done for ALL domains.<br>This can either be done by
        directly changing the <em>servicePrincipalName</em> value of the AD
        objects or by using the <em>setspn</em> command:</p><pre><code>setspn -d
        &lt;SPN&gt; &lt;accountname&gt;  

        setspn -d MSSQL/SQLSERVER1 sqlservice </code></pre>
      references:
        - 'https://luemmelsec.github.io/Kerberoasting-VS-AS-REP-Roasting/'
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H'
  priority: null
  remediationComplexity: null
  details:
    - locale: EN
      title: SAP Gateway ACL Misconfiguration
      vulnType: Vulnerability Scan
      description: >-
        <p>A remote code execution vulnerability exists in the remote SAP
        Gateway as a result of allowing non-SAP applications to communicate
        with, and potentially run OS commands on SAP applications. An
        unauthenticated attacker can run the arbitrary commands on remote server
        to gain access to the system or to read/write sensitive information.</p>
      remediation: >-
        <ul><li><p>Secure your Gateway ACL pointed by profile parameter
        gw/sec_info with help of SAP note 1408081</p></li><li><p>Filter out
        access from untrusted sources to the Gateway (port
        tcp/33NN)</p></li></ul>
      references:
        - 'https://github.com/chipik/SAP_GW_RCE_exploit'
        - 'https://github.com/gelim/sap_ms'
        - >-
          https://blogs.sap.com/2019/05/02/10kblaze-exploit-can-potentially-impact-most-sap-customers/
        - 'https://www.tenable.com/plugins/nessus/126003'
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N'
  priority: 3
  remediationComplexity: 1
  details:
    - locale: EN
      title: Write Access to Network Shares
      vulnType: Pentest
      description: >-
        <p>Network shares with improperly configured write permissions can allow
        unauthorized users to modify, overwrite, or upload malicious files. This
        misconfiguration can lead to:</p><ul><li><p><strong>Data
        Tampering</strong> – Attackers can alter or delete critical
        files.</p></li><li><p><strong>Malware Propagation</strong> – Malicious
        files (e.g., ransomware, trojans) can be uploaded and
        executed.</p></li><li><p><strong>Privilege Escalation</strong> –
        Sensitive scripts or executables can be modified to execute malicious
        code.</p></li><li><p><strong>Data Exfiltration</strong> – Attackers can
        replace legitimate files with fake ones to trick users into revealing
        credentials or sensitive data.</p></li></ul><p>If exploited, write
        access on network shares can result in operational disruptions, data
        loss, and security breaches.</p>
      remediation: >-
        <ul><li><p><strong>Implement the Principle of Least Privilege
        (PoLP)</strong> – Only grant write access to users who need
        it.</p></li><li><p><strong>Regular Permission Audits</strong> –
        Periodically review and restrict write permissions on shared
        folders.</p></li><li><p><strong>Enable Access Control Lists
        (ACLs)</strong> – Define and enforce granular permissions to prevent
        unauthorized modifications.</p></li><li><p><strong>Monitor File
        Activity</strong> – Use logging and alerts to detect unauthorized file
        changes.</p></li><li><p><strong>Disable Guest or Everyone Write
        Access</strong> – Ensure that anonymous or broad user groups do not have
        write privileges.</p></li><li><p><strong>Implement Endpoint
        Protection</strong> – Use antivirus and anti-malware solutions to detect
        suspicious activity on shares.</p></li><li><p><strong>Network
        Segmentation</strong> – Limit exposure by segregating critical shares
        from general user access.</p></li></ul>
      references: []
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N'
  priority: 3
  remediationComplexity: 1
  details:
    - locale: EN
      title: Kerberoasting
      vulnType: Pentest
      description: >-
        <p>Kerberoasting is an attack technique where an attacker with access to
        a Windows domain requests service tickets (TGS) for accounts with
        Service Principal Names (SPNs). These tickets are encrypted with the
        service account's NTLM hash. If the service account has weak
        credentials, the attacker can crack the hash offline and gain
        unauthorized access.</p><p><strong>Security
        Implications:</strong></p><ul><li><p><strong>Privilege
        Escalation</strong> – If a service account has high privileges (e.g.,
        Domain Admin), an attacker can take over the
        domain.</p></li><li><p><strong>Lateral Movement</strong> – Attackers can
        use the compromised account to move deeper into the
        network.</p></li><li><p><strong>Persistence</strong> – Once an attacker
        cracks a service account password, they can maintain long-term
        access.</p></li><li><p><strong>Stealthy Exploitation</strong> – Since
        Kerberoasting doesn’t require direct interaction with the target
        machine, it often evades detection by traditional endpoint security
        tools.</p></li></ul>
      remediation: >-
        <ul><li><p><strong>Use Strong Service Account Passwords</strong> –
        Ensure service accounts have long, complex passwords (25+
        characters).</p></li><li><p><strong>Regular Password Rotation</strong> –
        Frequently change service account passwords to reduce
        exposure.</p></li><li><p><strong>Limit Service Account
        Privileges</strong> – Avoid using high-privilege accounts for services
        unless absolutely necessary.</p></li><li><p><strong>Monitor for Unusual
        Ticket Requests</strong> – Set up alerts for abnormal Kerberos TGS
        requests, especially from non-administrative
        users.</p></li><li><p><strong>Implement Managed Service Accounts (MSAs)
        or Group Managed Service Accounts (gMSAs)</strong> – These automatically
        rotate strong passwords.</p></li><li><p><strong>Enable Kerberos AES
        Encryption</strong> – Use AES-256 encryption instead of weaker RC4 to
        make password cracking more difficult.</p></li><li><p><strong>Reduce
        Exposure of SPNs</strong> – Minimize the number of accounts with SPNs
        registered, and use least privilege
        principles.</p></li><li><p><strong>Detect &amp; Respond</strong> –
        Utilize SIEM solutions to monitor and detect Kerberoasting attempts in
        logs (e.g., Event ID 4769 with RC4 encryption).</p></li></ul>
      references:
        - 'https://luemmelsec.github.io/Kerberoasting-VS-AS-REP-Roasting/'
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N'
  priority: 3
  remediationComplexity: 1
  details:
    - locale: EN
      title: AS-REP Roasting
      vulnType: Pentest
      description: >-
        <p>AS-REP Roasting is an attack against Kerberos authentication in
        Active Directory. It targets accounts with the <strong>"Do not require
        Kerberos preauthentication"</strong> setting enabled. Attackers can
        request an Authentication Service Response (AS-REP) for such accounts,
        which contains an encrypted NTLM hash of the user’s password. The
        attacker can then perform offline password cracking to retrieve the
        plaintext credentials.</p><p><strong>Security
        Implications:</strong></p><ul><li><p><strong>Credential Theft</strong> –
        Weak passwords can be cracked, giving attackers direct access to user or
        service accounts.</p></li><li><p><strong>Privilege Escalation</strong> –
        If a privileged account (e.g., administrator or service account) is
        vulnerable, attackers can gain control over critical
        systems.</p></li><li><p><strong>Lateral Movement</strong> – Compromised
        credentials can be used to move across the network and escalate
        attacks.</p></li><li><p><strong>Stealthy Attack</strong> – Since AS-REP
        requests are legitimate Kerberos operations, they can go unnoticed in
        standard monitoring.</p></li></ul>
      remediation: >-
        <ul><li><p><strong>Disable "Do not require Kerberos
        preauthentication"</strong> – Ensure all accounts require
        preauthentication to prevent AS-REP Roasting.</p></li><li><p><strong>Use
        Strong Passwords</strong> – Enforce long, complex passwords to make
        cracking infeasible.</p></li><li><p><strong>Monitor for Unusual AS-REP
        Requests</strong> – Detect suspicious Kerberos AS-REQ events (Windows
        Event ID <strong>4768</strong> with result code
        <strong>0x0</strong>).</p></li><li><p><strong>Limit Privileges on
        Accounts</strong> – Apply the <strong>Principle of Least Privilege
        (PoLP)</strong> to reduce exposure if an account is
        compromised.</p></li><li><p><strong>Implement Multi-Factor
        Authentication (MFA)</strong> – Protect high-value accounts with MFA to
        add an extra layer of security.</p></li><li><p><strong>Use Group Managed
        Service Accounts (gMSAs)</strong> – Instead of manually created service
        accounts, use gMSAs, which automatically rotate complex
        passwords.</p></li><li><p><strong>Deploy SIEM Solutions</strong> – Use
        security monitoring tools to flag abnormal authentication
        attempts.</p></li></ul>
      references: []
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N'
  priority: 3
  remediationComplexity: 1
  details:
    - locale: EN
      title: Passwords in Description Fields of AD Users
      vulnType: Pentest
      description: >-
        <p>Some organizations mistakenly store passwords or other sensitive
        information in the <strong>description field</strong> of Active
        Directory (AD) user accounts. Attackers who gain read access to AD (even
        with a low-privileged account) can easily extract this information and
        use it to compromise accounts.</p><p><strong>Security
        Implications:</strong></p><ul><li><p><strong>Credential
        Exposure</strong> – Any user with basic read access to AD can extract
        stored passwords.</p></li><li><p><strong>Privilege Escalation</strong> –
        If admin or service account credentials are exposed, attackers can
        escalate their privileges.</p></li><li><p><strong>Lateral
        Movement</strong> – Compromised credentials allow attackers to move
        through the network undetected.</p></li><li><p><strong>Automated
        Discovery by Attackers</strong> – Tools like PowerShell, BloodHound, and
        AD enumeration scripts can quickly harvest plaintext credentials from AD
        fields.</p></li><li><p><strong>Regulatory &amp; Compliance
        Risks</strong> – Storing plaintext passwords in AD violates security
        best practices and compliance requirements (e.g., GDPR, HIPAA,
        PCI-DSS).</p></li></ul>
      remediation: >-
        <ul><li><p><strong>Search &amp; Remove Stored Passwords</strong> –
        Regularly scan AD for sensitive data in <strong>description, comment, or
        notes fields</strong> and remove it. Use e.g.
        PowerShell:</p><p></p><p><code>Get-ADUser -Filter * -Properties
        Description | Where-Object {$_.Description -match "password"} |
        Select-Object Name,
        Description</code></p><p></p></li><li><p><strong>Restrict AD Read
        Access</strong> – Limit who can read user attributes in AD to prevent
        easy credential harvesting.</p></li><li><p><strong>Implement Group
        Policy Restrictions</strong> – Enforce policies that prevent users from
        saving sensitive data in AD fields.</p></li><li><p><strong>Educate IT
        &amp; Admins</strong> – Train staff to never store passwords in AD
        fields, emails, or documentation.</p></li><li><p><strong>Use Secure
        Credential Management</strong> – Store passwords securely in
        <strong>password managers</strong> or vaults like <strong>CyberArk,
        HashiCorp Vault, or KeePass</strong>.</p></li><li><p><strong>Monitor for
        Suspicious Queries</strong> – Use <strong>SIEM tools</strong> to detect
        bulk AD enumeration attempts.</p></li><li><p><strong>Audit AD for
        Misconfigurations</strong> – Regularly review AD configurations for
        security weaknesses.</p></li></ul>
      references: []
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N'
  priority: 3
  remediationComplexity: 3
  details:
    - locale: EN
      title: Domain Password Spray Attack
      vulnType: Pentest
      description: >-
        <p>A <strong>Domain Password Spray Attack</strong> is a brute-force
        technique where an attacker tries a few common passwords (e.g.,
        <em>Spring2024!</em>, <em>Welcome1</em> or <em>P@ssw0rd</em>) against
        many different user accounts within an Active Directory (AD) domain.
        Unlike traditional brute-force attacks that target a single account with
        many password attempts (leading to account lockouts), password spraying
        avoids detection by spreading attempts across multiple
        users.</p><p><strong>Security
        Implications:</strong></p><ul><li><p><strong>Account Compromise</strong>
        – Users with weak or commonly used passwords are vulnerable to
        takeover.</p></li><li><p><strong>Bypassing Lockout Policies</strong> –
        Since each user is only tested a few times, domain lockout policies
        don’t trigger.</p></li><li><p><strong>Privilege Escalation &amp; Lateral
        Movement</strong> – If an attacker compromises an admin account or
        service account, they can move deeper into the
        network.</p></li><li><p><strong>Stealthy Execution</strong> – The attack
        often goes unnoticed because it generates minimal failed login attempts
        per user.</p></li><li><p><strong>Cloud &amp; Hybrid Threat</strong> –
        Password spraying can be used against on-prem AD, cloud environments
        like <strong>Azure AD</strong>, or federated authentication
        services.</p></li></ul>
      remediation: >-
        <ul><li><p><strong>Enforce Strong Password Policies</strong> – Require
        long, complex, and unique passwords that resist common password
        lists.</p></li><li><p><strong>Implement Multi-Factor Authentication
        (MFA)</strong> – Use MFA to prevent unauthorized access, even if
        credentials are compromised.</p></li><li><p><strong>Monitor for Unusual
        Login Failures</strong> – Detect patterns of failed logins across
        multiple accounts (Event IDs <strong>4625</strong> for Windows or
        <strong>SigninLogs</strong> in Azure AD).</p></li><li><p><strong>Use
        Smart Lockout Mechanisms</strong> – Configure adaptive lockout policies
        that block repeated failed logins from a single
        IP.</p></li><li><p><strong>Apply Conditional Access Policies</strong> –
        Restrict access based on device compliance, location, or risk level
        (Azure AD Conditional Access).</p></li><li><p><strong>Audit &amp; Rotate
        Service Account Credentials</strong> – Ensure service accounts use long,
        unique passwords that are changed
        periodically.</p></li><li><p><strong>Enable Threat Intelligence &amp;
        SIEM Monitoring</strong> – Use tools like <strong>Microsoft Defender for
        Identity</strong>, <strong>Splunk</strong>, or <strong>Azure
        Sentinel</strong> to detect suspicious login
        patterns.</p></li><li><p><strong>Limit Legacy Authentication
        Protocols</strong> – Disable legacy authentication (e.g., NTLM, older
        SMTP, and IMAP) which lacks MFA support and is commonly targeted in
        spraying attacks.</p></li><li><p><strong>Have all users which were
        identified having weak credentials change their password
        immediately</strong></p></li></ul>
      references: []
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N'
  priority: 3
  remediationComplexity: 2
  details:
    - locale: EN
      title: Weak Password Policy
      vulnType: Pentest
      description: >-
        <p>A <strong>weak password policy</strong> in an Active Directory (AD)
        environment allows users to set passwords that are short, simple, or
        commonly used. This significantly increases the risk of password-related
        attacks, including:</p><ul><li><p><strong>Brute-Force &amp; Dictionary
        Attacks</strong> – Attackers can easily guess weak passwords using
        automated tools.</p></li><li><p><strong>Password Spraying</strong> –
        Attackers test common passwords across multiple accounts without
        triggering lockouts.</p></li><li><p><strong>Credential Stuffing</strong>
        – Reused passwords from data breaches can grant unauthorized
        access.</p></li><li><p><strong>Privilege Escalation</strong> – If admin
        or service accounts use weak passwords, attackers can gain control over
        critical systems.</p></li><li><p><strong>Compliance Violations</strong>
        – Many regulations (e.g., <strong>NIST, PCI-DSS, HIPAA</strong>) require
        strong password policies.</p></li></ul>
      remediation: >-
        <ul><li><p><strong>Enforce Strong Password
        Requirements</strong></p><ul><li><p>Minimum <strong>14+
        characters</strong></p></li><li><p>Require <strong>uppercase, lowercase,
        numbers, and special characters</strong></p></li><li><p>Avoid dictionary
        words or common patterns (e.g.,
        <em>Spring2024!</em>)</p></li></ul></li><li><p><strong>Enable Azure AD
        Password Protection</strong> (For hybrid/cloud
        environments)</p><ul><li><p>Blocks commonly used
        passwords</p></li><li><p>Prevents slight variations of known weak
        passwords</p></li></ul></li><li><p><strong>Implement Passphrases Instead
        of Complex Rules</strong></p><ul><li><p>Example:
        <em>BlueTiger$CoffeeRain22</em> (Easier to remember, harder to
        crack)</p></li></ul></li><li><p><strong>Use Multi-Factor Authentication
        (MFA)</strong></p><ul><li><p>Even if passwords are compromised, MFA adds
        a second layer of protection</p></li></ul></li><li><p><strong>Prevent
        Password Reuse &amp; History Violations</strong></p><ul><li><p>Enforce a
        <strong>password history</strong> of at least <strong>24 previous
        passwords</strong></p></li></ul></li><li><p><strong>Deploy Account
        Lockout Policies</strong></p><ul><li><p>Lock accounts after <strong>5-10
        failed attempts</strong> to slow brute-force
        attacks</p></li></ul></li><li><p><strong>Regularly Audit &amp; Monitor
        Password Security</strong></p><ul><li><p>Check for weak passwords using
        tools like <strong>LAPS, BloodHound, or
        PwnedPasswords</strong></p></li><li><p>Monitor <strong>Event ID
        4740</strong> (Account Lockouts) for suspicious
        behavior</p></li></ul></li><li><p><strong>Use a Privileged Access
        Management (PAM) Solution</strong></p><ul><li><p>Protect high-value
        admin/service accounts with <strong>password rotation &amp;
        vaulting</strong></p></li></ul></li></ul>
      references: []
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N'
  priority: 3
  remediationComplexity: 2
  details:
    - locale: EN
      title: Storing Credentials in Browser
      vulnType: Pentest
      description: >-
        <p>Many users store credentials in web browsers for convenience, but
        this practice introduces significant security risks,
        including:</p><ul><li><p><strong>Credential Theft</strong> – Malware
        (e.g., <strong>RedLine Stealer, Mimikatz, or Raccoon Stealer</strong>)
        can extract stored passwords from
        browsers.</p></li><li><p><strong>Session Hijacking</strong> – Attackers
        with local or remote access can steal stored session
        cookies.</p></li><li><p><strong>Compromised Cloud &amp; Enterprise
        Accounts</strong> – If corporate credentials are stored and later
        stolen, attackers can access critical business
        applications.</p></li><li><p><strong>Weak or No Encryption</strong> –
        Some browsers store passwords in <strong>unencrypted or weakly encrypted
        formats</strong>, making them easy to
        extract.</p></li><li><p><strong>Syncing Risks</strong> – If a user’s
        personal device is compromised, stolen credentials may sync across all
        linked devices.</p></li></ul>
      remediation: >-
        <ul><li><p><strong>Disable Browser Credential
        Storage</strong></p><ul><li><p>Use <strong>Group Policy (GPO), Intune,
        or MDM</strong> to block password storage in
        browsers.</p></li><li><p>Example: In Windows, disable <strong>"Offer to
        save passwords"</strong> in Chrome via
        GPO.</p></li></ul></li><li><p><strong>Use a Secure Password
        Manager</strong></p><ul><li><p>Deploy <strong>enterprise-grade password
        managers</strong> (e.g., <strong>Bitwarden, 1Password, KeePass, or
        CyberArk</strong>).</p></li><li><p>Ensure they support
        <strong>multi-factor authentication
        (MFA)</strong>.</p></li></ul></li><li><p><strong>Enforce MFA on All
        Accounts</strong></p><ul><li><p>Even if credentials are compromised, MFA
        reduces the risk of unauthorized
        access.</p></li></ul></li><li><p><strong>Monitor &amp; Block Password
        Stealing Malware</strong></p><ul><li><p>Use <strong>Endpoint Detection
        &amp; Response (EDR)</strong> solutions like <strong>Microsoft Defender
        for Endpoint, CrowdStrike, or
        SentinelOne</strong>.</p></li><li><p>Regularly update anti-malware
        definitions.</p></li></ul></li><li><p><strong>Restrict Administrative
        Access</strong></p><ul><li><p>Prevent attackers from escalating
        privileges if they gain access to a system.</p></li><li><p>Use
        <strong>Least Privilege Access</strong> and <strong>Just-in-Time (JIT)
        access</strong>.</p></li></ul></li><li><p><strong>Educate Users on
        Security Risks</strong></p><ul><li><p>Conduct regular security awareness
        training.</p></li><li><p>Teach employees to avoid saving credentials in
        browsers and to use <strong>strong, unique
        passwords</strong>.</p></li></ul></li></ul>
      references: []
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H'
  priority: 3
  remediationComplexity: 3
  details:
    - locale: EN
      title: Sensitive Data in Network Shares
      vulnType: Pentest
      description: >-
        <p>Sensitive data, such as passwords, financial records, personally
        identifiable information (PII), or proprietary business data, is
        sometimes stored in <strong>insecure network shares</strong> with overly
        permissive access. This misconfiguration creates serious security risks,
        including:</p><ul><li><p><strong>Unauthorized Access</strong> –
        Attackers or unauthorized employees can access, steal, or alter
        sensitive information.</p></li><li><p><strong>Data Exfiltration</strong>
        – Compromised data can be leaked, violating regulations like
        <strong>GDPR, HIPAA, PCI-DSS</strong>.</p></li><li><p><strong>Ransomware
        &amp; Malware</strong> – Attackers can encrypt or corrupt critical
        files.</p></li><li><p><strong>Privilege Escalation</strong> – Exposed
        credentials in files (e.g., <strong>passwords.txt, config.ini</strong>)
        can lead to domain compromise.</p></li><li><p><strong>Regulatory &amp;
        Legal Risks</strong> – Non-compliance with industry regulations may lead
        to hefty fines and reputational damage.</p></li></ul>
      remediation: >-
        <ul><li><p><strong>Implement Access Controls (Principle of Least
        Privilege)</strong></p><ul><li><p>Restrict access based on job
        roles.</p></li><li><p>Ensure <strong>only authorized users</strong> can
        read or modify sensitive
        files.</p></li></ul></li><li><p><strong>Regularly Audit &amp; Classify
        Data</strong></p><ul><li><p>Scan for sensitive data using tools like
        <strong>Microsoft Purview, Varonis, or
        OpenDLP</strong>.</p></li><li><p>Remove or relocate exposed sensitive
        files.</p></li></ul></li><li><p><strong>Encrypt Sensitive
        Files</strong></p><ul><li><p>Use <strong>BitLocker, EFS (Encrypting File
        System), or AES-256 encryption</strong> to protect sensitive data at
        rest.</p></li></ul></li><li><p><strong>Monitor &amp; Log File
        Access</strong></p><ul><li><p>Enable auditing for shared folders (Event
        ID <strong>4663</strong> for file access tracking).</p></li><li><p>Use
        <strong>SIEM solutions</strong> to detect abnormal file access
        patterns.</p></li></ul></li><li><p><strong>Use Data Loss Prevention
        (DLP) Solutions</strong></p><ul><li><p>Prevent unauthorized file
        transfers using <strong>Microsoft DLP, Symantec DLP, or Forcepoint
        DLP</strong>.</p></li></ul></li><li><p><strong>Secure Administrative
        Shares</strong></p><ul><li><p>Remove <strong>Everyone</strong> and
        <strong>Authenticated Users</strong> from high-risk share
        permissions.</p></li><li><p>Disable <strong>default administrative
        shares</strong> if not needed (e.g., <strong>C$,
        Admin$</strong>).</p></li></ul></li><li><p><strong>Regularly Review
        &amp; Remove Unused Shares</strong></p><ul><li><p>Decommission old or
        unnecessary shares to reduce attack surface.</p></li></ul></li></ul>
      references: []
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H'
  priority: 3
  remediationComplexity: 2
  details:
    - locale: EN
      title: MitM - Active Directory Integrated DNS (ADIDNS) Attacks
      vulnType: Pentest
      description: >-
        <p><strong>Active Directory Integrated DNS (ADIDNS)</strong> is a
        configuration where DNS data is stored directly in Active Directory,
        leveraging AD replication mechanisms. While this setup provides
        centralized management, it also introduces several security
        risks:</p><ul><li><p><strong>DNS Poisoning/Cache Poisoning</strong> – If
        attackers gain access to ADIDNS, they can manipulate DNS records,
        redirecting traffic to malicious servers.</p></li><li><p><strong>Domain
        Admin Compromise</strong> – An attacker with control over DNS data could
        escalate their privileges by altering domain-joined machine records or
        pointing to malicious domain controllers.</p></li><li><p><strong>Lateral
        Movement &amp; Privilege Escalation</strong> – By modifying DNS records
        for key services (e.g., <strong>Kerberos, LDAP, or SMB</strong>),
        attackers can redirect traffic to compromised servers, enabling them to
        steal credentials or escalate
        privileges.</p></li><li><p><strong>Persistence &amp; Stealth</strong> –
        ADIDNS records are replicated across the domain, making it harder to
        detect unauthorized changes. Once changes are made, they can persist
        even if initial access is lost.<br></p></li></ul><p>By default, every
        member of the <strong>Authenticated Users</strong> group (this means
        every user and every computer) can add such DNS entries. <br>One attack
        scenario is to add a Wildcard Record of "*" so that all entries that
        fail to resolve via ADIDNS would resolve to the attacker controlled
        entry.</p>
      remediation: >-
        <ul><li><p><strong>Restrict DNS Admin
        Access</strong></p><ul><li><p>Apply <strong>least privilege</strong> by
        limiting administrative rights to DNS records and DNS
        servers.</p></li><li><p>Use <strong>Group Policy</strong> to enforce
        restricted access to AD-integrated
        DNS.</p></li></ul></li><li><p><strong>Monitor DNS
        Changes</strong></p><ul><li><p>Implement <strong>auditing</strong> for
        DNS record changes (e.g., using <strong>Event ID 5136</strong> to
        monitor Active Directory modifications).</p></li><li><p>Use
        <strong>SIEM</strong> solutions (e.g., <strong>Splunk,
        SentinelOne</strong>) to detect suspicious DNS record
        changes.</p></li></ul></li><li><p><strong>Harden DNS
        Servers</strong></p><ul><li><p>Ensure DNS servers are <strong>isolated
        from general user access</strong> and only accessible by
        administrators.</p></li><li><p>Enable <strong>DNSSEC</strong> (DNS
        Security Extensions) for additional protection.</p></li><li><p>Use
        <strong>DNS logging</strong> to track query patterns and identify
        potential abuses.</p></li><li><p>Set a Wildcard Record by your own and
        point it e.g. to 127.0.0.1 or
        0.0.0.0</p></li></ul></li><li><p><strong>Use Time-Based
        Monitoring</strong></p><ul><li><p>Monitor for unusual DNS query patterns
        that could indicate DNS manipulation or unauthorized
        access.</p></li><li><p>Detect unusual traffic redirecting to unexpected
        or malicious IPs.</p></li></ul></li><li><p><strong>Regularly Review DNS
        Records</strong></p><ul><li><p>Periodically check for unauthorized or
        suspicious records in the AD-integrated DNS zones.</p></li><li><p>Verify
        that all DNS records align with your organizational requirements and
        configurations.</p></li></ul></li><li><p><strong>Use Split-Horizon
        DNS</strong></p><ul><li><p>For environments with both internal and
        external DNS, implement <strong>split-horizon DNS</strong> to segregate
        internal and external domain
        data.</p></li></ul></li><li><p><strong>Deploy Endpoint
        Protection</strong></p><ul><li><p>Use <strong>EDR (Endpoint Detection
        and Response)</strong> solutions to monitor devices for signs of
        DNS-related attacks.</p></li><li><p>Ensure endpoints are regularly
        scanned for malware that could alter DNS configurations or
        traffic.<br></p></li></ul></li></ul><p><strong>Please take into
        consideration that changes to how ADIDNS operates might have
        implications on your infrastructure. Please also refer to the reference
        section.</strong></p>
      references:
        - >-
          https://www.netspi.com/blog/technical/network-penetration-testing/adidns-revisited/
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H'
  priority: 3
  remediationComplexity: 2
  details:
    - locale: EN
      title: Mitm - DHCPv6 Attacks
      vulnType: Pentest
      description: >-
        <p><strong>DHCPv6 Man-in-the-Middle (MitM)</strong> attacks occur when
        an attacker intercepts, manipulates, or impersonates the <strong>Dynamic
        Host Configuration Protocol version 6 (DHCPv6)</strong> communication
        between a device (client) and a DHCPv6 server. In a typical DHCPv6
        setup, clients rely on the DHCPv6 server to obtain configuration
        information, such as IP addresses, DNS servers, and other network
        settings. The attacker exploits this communication to perform malicious
        actions.</p><p>A <strong>MitM attack</strong> on DHCPv6 can lead
        to:</p><ul><li><p><strong>IP Spoofing</strong> – The attacker can
        provide false network configuration data to clients, such as a malicious
        DNS server or gateway.</p></li><li><p><strong>Denial of Service
        (DoS)</strong> – By overwhelming the network with rogue DHCPv6 server
        advertisements or responses, the attacker can prevent clients from
        obtaining valid configurations.</p></li><li><p><strong>Traffic
        Interception</strong> – The attacker can route traffic through a
        malicious system, enabling them to eavesdrop on sensitive data or launch
        further attacks like <strong>credential sniffing</strong> or
        <strong>data exfiltration</strong>.</p></li><li><p><strong>Network
        Manipulation</strong> – By providing a malicious <strong>default
        gateway</strong> or <strong>DNS server</strong>, the attacker can
        manipulate traffic, redirect users to phishing sites, or disrupt
        communications.</p></li></ul><p>In a typical attack scenario, the IPv6
        of the attacker will be set as the DNS Server on the victim systems
        rather than as Default Gateway, which allows a more granular control
        over which assets to attack.</p>
      remediation: >-
        <ul><li><p><strong>Disable IPv6 where
        possible</strong></p></li><li><p><strong>Give IPv4 precedence over
        IPv6</strong></p><ul><li><p>In that case the regular DNS Server provided
        via DHCPv4 would take over and not the malicious DHCPv6
        one.</p></li></ul></li><li><p><strong>Deploy your own IPv6 configuration
        with a valid Gateway and DNS
        server</strong></p></li><li><p><strong>Enable DHCPv6 Security
        Features</strong></p><ul><li><p><strong>DHCPv6 Secure Server</strong>:
        Use authenticated DHCPv6 servers (e.g., <strong>Authorization
        Tokens</strong>) to prevent unauthorized devices from responding to DHCP
        requests.</p></li><li><p><strong>Use RA Guard</strong>: Enable
        <strong>Router Advertisement (RA) Guard</strong> on network switches to
        prevent rogue routers from advertising malicious DHCPv6
        configurations.</p></li><li><p><strong>Use DHCPv6 Snooping</strong>:
        Enable <strong>DHCPv6 Snooping</strong> on network switches to ensure
        only legitimate DHCPv6 servers can send responses to
        clients.</p></li></ul></li><li><p><strong>Implement Network
        Segmentation</strong></p><ul><li><p>Use VLANs or other segmentation
        techniques to separate trusted DHCP servers from untrusted networks,
        making it harder for attackers to introduce rogue DHCPv6
        servers.</p></li></ul></li><li><p><strong>Deploy Intrusion Detection
        Systems (IDS)</strong></p><ul><li><p>Monitor DHCPv6 traffic for
        suspicious behavior (e.g., multiple servers offering configurations or
        conflicting options). Use <strong>IDS/IPS systems</strong> (like
        <strong>Suricata</strong> or <strong>Snort</strong>) to detect and block
        malicious DHCPv6 traffic.</p></li></ul></li><li><p><strong>Monitor for
        Rogue DHCPv6 Servers</strong></p><ul><li><p>Regularly scan the network
        for rogue DHCPv6 servers using tools like <strong>dhcpdump</strong> or
        <strong>Wireshark</strong> to capture and analyze DHCPv6 packets for any
        suspicious activity.</p></li><li><p>Set up alerts for any
        <strong>unauthorized DHCPv6 advertisements</strong> on the
        network.</p></li></ul></li><li><p><strong>Use
        IPsec</strong></p><ul><li><p>Implement <strong>IPsec</strong> or other
        encryption mechanisms to protect the integrity and confidentiality of
        DHCPv6 communications, reducing the risk of interception and
        modification.</p></li></ul></li><li><p><strong>Educate Users and
        Implement Strong Network Access Control</strong></p><ul><li><p>Use
        <strong>802.1X</strong> network authentication to prevent unauthorized
        devices from connecting to the network.</p></li><li><p>Train employees
        to recognize potential phishing or other social engineering attacks that
        could follow a successful DHCPv6 MitM
        attack.</p></li></ul></li><li><p><strong>Implement DHCPv6 Lease Expiry
        &amp; Monitoring</strong></p><ul><li><p>Monitor DHCPv6 lease times and
        ensure that leases are refreshed periodically to avoid long-term
        exploitation of compromised configurations.</p></li></ul></li></ul><p>Be
        especially cautious when doing this on Server systems. Microsoft does
        not recommend disabling IPv6 especially on Domain Controllers and
        Exchange Servers.</p>
      references: []
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H'
  priority: 3
  remediationComplexity: 2
  details:
    - locale: EN
      title: Mitm - ARP Spoofing
      vulnType: Pentest
      description: >-
        <p><strong>ARP Spoofing</strong> (or <strong>ARP poisoning</strong>) is
        a type of <strong>Man-in-the-Middle (MitM)</strong> attack in which an
        attacker sends fake <strong>Address Resolution Protocol (ARP)</strong>
        messages on a local network. ARP is used to map a device's IP address to
        its MAC address, allowing devices on a network to communicate with each
        other. By spoofing ARP messages, the attacker can associate their
        <strong>MAC address with a legitimate IP address</strong>, usually that
        of a <strong>gateway</strong> or <strong>target
        device</strong>.</p><p><strong>Security Implications of ARP
        Spoofing:</strong></p><ul><li><p><strong>Traffic Interception &amp;
        Sniffing</strong> – The attacker can intercept and read all network
        traffic between devices, allowing them to capture sensitive information
        like passwords, usernames, and session
        cookies.</p></li><li><p><strong>Man-in-the-Middle (MitM)
        Attacks</strong> – After intercepting traffic, attackers can alter it
        before sending it to the intended recipient. This opens the door for
        activities like session hijacking, data modification, and injection of
        malicious content.</p></li><li><p><strong>Denial of Service
        (DoS)</strong> – By corrupting ARP tables or creating network loops,
        attackers can disrupt communication, preventing devices from accessing
        critical resources.</p></li><li><p><strong>Privilege Escalation</strong>
        – In some cases, attackers can exploit the data they intercept (such as
        unencrypted credentials) to escalate privileges on internal
        systems.</p></li><li><p><strong>Bypass Network Security</strong> – ARP
        spoofing can be used to bypass security mechanisms like firewalls,
        IDS/IPS, or encryption if the attacker is positioned between the target
        devices and the network resources.</p></li></ul>
      remediation: >-
        <ul><li><p><strong>Use Static ARP
        Entries</strong></p><ul><li><p>Manually configure static ARP entries for
        critical systems (like gateways, DNS servers, or servers with sensitive
        data) so that ARP resolution cannot be poisoned. This reduces the
        likelihood of spoofing.</p></li><li><p>On Linux/Unix systems, you can
        add static ARP entries using:</p><p><code>sudo arp -s &lt;IP Address&gt;
        &lt;MAC Address&gt;</code></p></li></ul></li><li><p><strong>Enable
        Dynamic ARP Inspection (DAI)</strong></p><ul><li><p>Use <strong>Dynamic
        ARP Inspection (DAI)</strong> on network switches to validate ARP
        packets. DAI checks the integrity of ARP packets before they are
        processed, ensuring they come from trusted sources.</p></li><li><p>Most
        modern <strong>Cisco</strong> and <strong>HP ProCurve</strong> switches
        support DAI to prevent ARP spoofing
        attacks.</p></li></ul></li><li><p><strong>Use VLANs and Network
        Segmentation</strong></p><ul><li><p>Segment networks into smaller VLANs
        (Virtual Local Area Networks) to limit the scope of ARP poisoning
        attacks. This ensures that attackers can’t affect the entire
        network.</p></li><li><p>Limit the ARP broadcast domain to reduce the
        attack surface.</p></li></ul></li><li><p><strong>Implement Intrusion
        Detection Systems (IDS)</strong></p><ul><li><p>Use <strong>IDS</strong>
        tools (e.g., <strong>Snort, Suricata, or Zeek</strong>) to detect
        abnormal ARP traffic, such as multiple ARP replies with different MAC
        addresses for the same IP.</p></li><li><p>Many IDS systems can
        automatically alert or take action if suspicious ARP traffic is
        detected.</p></li></ul></li><li><p><strong>Monitor Network
        Traffic</strong></p><ul><li><p>Regularly monitor ARP traffic on the
        network using tools like <strong>Wireshark</strong> or
        <strong>tcpdump</strong> to identify any irregular ARP
        replies.</p></li><li><p>Look for duplicate IP-to-MAC address mappings,
        which could indicate an ARP spoofing
        attack.</p></li></ul></li><li><p><strong>Use
        Encryption</strong></p><ul><li><p>Employ <strong>TLS/SSL
        encryption</strong> for sensitive communications to prevent attackers
        from reading or altering intercepted data, even if they are successful
        in executing ARP spoofing.</p></li><li><p>Use <strong>VPNs</strong> for
        internal communication to ensure that the traffic is encrypted
        end-to-end, protecting it from
        interception.</p></li></ul></li><li><p><strong>Use ARP Spoofing
        Detection Tools</strong></p><ul><li><p>Tools like <strong>XArp</strong>,
        <strong>Cain &amp; Abel</strong>, or <strong>arpspoof</strong> can be
        used to detect and block ARP poisoning on the
        network.</p></li><li><p>These tools can help identify discrepancies in
        ARP tables and identify suspicious activities on the local
        network.</p></li></ul></li><li><p><strong>Educate
        Users</strong></p><ul><li><p>Train network users to be aware of
        suspicious network behavior (e.g., abnormal performance, certificate
        errors, etc.) and encourage the use of encrypted communication for
        sensitive operations.</p></li></ul></li></ul>
      references: []
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N'
  priority: 2
  remediationComplexity: 3
  details:
    - locale: EN
      title: LDAP Signing and Channel Binding
      description: >-
        <p><strong>LDAP Signing</strong> and <strong>Channel Binding</strong>
        are security mechanisms designed to protect <strong>LDAP</strong>
        (Lightweight Directory Access Protocol) traffic between clients and
        servers from being tampered with or intercepted by attackers. Without
        these protections, LDAP traffic can be vulnerable to
        <strong>Man-in-the-Middle (MitM)</strong> attacks, where attackers can
        intercept, modify, or impersonate legitimate LDAP
        communications.</p><p><strong>LDAP Signing</strong>:</p><p>LDAP Signing
        ensures that the data exchanged between the LDAP client and server is
        <strong>integrity-protected</strong>, preventing tampering during
        transmission. When LDAP Signing is enabled, both the client and server
        verify that the data has not been altered in
        transit.</p><ul><li><p><strong>Security Implications of LDAP
        Signing</strong>:</p><ul><li><p><strong>Man-in-the-Middle (MitM)
        Attacks</strong>: If LDAP signing is disabled, an attacker can intercept
        and modify LDAP traffic, potentially compromising user credentials or
        altering authentication requests.</p></li><li><p><strong>Credential
        Theft</strong>: Attackers can steal plaintext credentials or session
        data if the LDAP traffic is not signed and
        encrypted.</p></li><li><p><strong>Replay Attacks</strong>: Without
        signing, attackers can replay intercepted LDAP messages to gain
        unauthorized access.</p></li></ul></li></ul><p><strong>Channel
        Binding</strong>:</p><p>Channel Binding works alongside <strong>LDAP
        Signing</strong> and adds an additional layer of protection. It binds
        the authentication channel to the underlying transport layer (typically
        <strong>TLS/SSL</strong> or <strong>SMB</strong>), ensuring that LDAP
        traffic is encrypted and protected from tampering or interception by
        unauthorized parties. This mechanism helps defend against attacks that
        might involve manipulating the channel’s
        identity.</p><ul><li><p><strong>Security Implications of Channel
        Binding</strong>:</p><ul><li><p><strong>Session Hijacking</strong>:
        Without channel binding, attackers can hijack a valid session by
        intercepting and manipulating the
        connection.</p></li><li><p><strong>Unencrypted Communications</strong>:
        Channel binding ensures that LDAP messages are not only signed but also
        securely encrypted, protecting sensitive
        information.</p></li><li><p><strong>Man-in-the-Middle (MitM)
        Attacks</strong>: In the absence of channel binding, attackers could
        exploit vulnerabilities in the transport layer (e.g., downgrade attacks)
        to bypass encryption.</p></li></ul></li></ul>
      remediation: >-
        <p><strong>Enforce LDAP Signing</strong></p><ul><li><p><strong>Group
        Policy Configuration</strong>: Ensure that LDAP signing is enabled
        across the domain. In Active Directory, LDAP signing can be enforced via
        Group Policy settings.</p><ul><li><p>Open <strong>Group Policy
        Management</strong> → Computer Configuration → Administrative Templates
        → System → <strong>Netlogon</strong> → Enable <strong>LDAP client
        signing</strong> and <strong>LDAP server
        signing</strong>.</p></li><li><p><strong>Setting</strong>:
        <strong>Require signing</strong> (This forces all LDAP communication to
        be signed).</p></li></ul></li><li><p><strong>Registry
        Configuration</strong>: On the server side, ensure the registry is
        configured to require LDAP
        signing:</p><p><code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NTDS\Parameters</code></p><p><code>Value
        Name: LDAPServerIntegrity Value Type: REG_DWORD Value Data:
        2</code></p><p>The value <code>2</code> ensures that LDAP communication
        is signed by requiring it.</p></li></ul><p><strong>Enable LDAP Channel
        Binding</strong></p><ul><li><p><strong>Enable Channel Binding in Group
        Policy</strong>: Channel binding is part of the modern <strong>Kerberos
        authentication</strong> in Windows environments and can be configured
        through Group Policy settings:</p><ul><li><p>Open <strong>Group Policy
        Management</strong> → Computer Configuration → Administrative Templates
        → System → <strong>Kerberos</strong> → <strong>Enable Channel
        Binding</strong>.</p></li><li><p>Set to <strong>Enabled</strong> to
        ensure that LDAP authentication is protected by the transport
        layer.</p></li></ul></li><li><p><strong>Registry Configuration</strong>:
        On the server side, ensure the registry is configured to require LDAP
        signing:</p><p><code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NTDS\Parameters</code></p><p><code>Value
        Name: LDAPEnforceChannelBinding Value Type: REG_DWORD Value Data:
        2</code></p><p>The value <code>2</code> enforces LDAP Channel Binding.
        Value <code>1</code> would enable it "when
        supported".</p></li><li><p><strong>Use TLS/SSL for LDAP</strong>: Make
        sure that LDAP traffic is encrypted using <strong>LDAPS</strong> (LDAP
        over SSL/TLS). This prevents attackers from being able to intercept or
        tamper with the LDAP traffic.</p><ul><li><p>You can configure the LDAP
        server to listen on the secure port <strong>636</strong> for LDAPS
        connections.</p></li></ul></li></ul><p><strong>Regularly Review and
        Update Security Protocols</strong></p><ul><li><p><strong>Use Modern
        Cryptographic Protocols</strong>: Ensure that LDAP signing and channel
        binding are using up-to-date, secure cryptographic protocols. Avoid
        deprecated versions of TLS/SSL (e.g., SSLv3 or TLS
        1.0).</p></li><li><p><strong>Enforce Strong Encryption</strong>: Enforce
        encryption for all network traffic, especially for administrative
        access, to prevent data leakage or manipulation. Prefer
        <strong>AES</strong> and <strong>RSA</strong> algorithms over weaker
        ciphers.</p></li></ul><p><strong>Network Monitoring and Intrusion
        Detection</strong></p><ul><li><p><strong>Audit LDAP Traffic</strong>:
        Regularly monitor LDAP traffic using network security tools (e.g.,
        <strong>Wireshark</strong>, <strong>NetFlow</strong>, or <strong>NAC
        solutions</strong>) to identify unencrypted, unsigned, or anomalous
        traffic.</p></li><li><p><strong>Use SIEM Solutions</strong>: Security
        Information and Event Management (SIEM) tools can help detect and alert
        on suspicious LDAP traffic patterns or unexpected attempts to disable
        LDAP signing or channel binding.</p></li></ul><p><strong>Educate and
        Train Administrators</strong></p><ul><li><p>Ensure that <strong>IT
        administrators</strong> are aware of the importance of enforcing
        <strong>LDAP signing</strong> and <strong>channel binding</strong>,
        especially when working with older systems or transitioning between
        protocols.</p></li></ul><p><strong>Perform Regular Vulnerability
        Scanning</strong></p><ul><li><p>Regularly scan your LDAP infrastructure
        for vulnerabilities using tools like <strong>Nessus</strong>,
        <strong>Qualys</strong>, or <strong>OpenVAS</strong>. Ensure that there
        are no weak configurations or outdated protocols allowing unprotected
        LDAP traffic.</p></li></ul>
      references: []
      customFields: []
  category: Internal Pentest

- cvssv3: null
  priority: null
  remediationComplexity: null
  details:
    - locale: EN
      title: Structural Findings Internal Pentest
      vulnType: Pentest
      description: >-
        <p>This finding is to aggregate structural findings that came up during
        the engagement but that do not fit into specific categories.</p>
      references: []
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N'
  priority: 2
  remediationComplexity: 1
  details:
    - locale: EN
      title: Open Mail Relay
      vulnType: Pentest
      description: >-
        <p>An <strong>open mail relay</strong> occurs when an <strong>email
        server</strong> (such as Microsoft Exchange) accepts and forwards emails
        from <strong>any source without authentication</strong>. This allows
        attackers to:</p><ul><li><p><strong>Send spam or phishing
        emails</strong> using your server’s
        IP/domain.</p></li><li><p><strong>Spoof legitimate emails</strong> to
        impersonate internal users.</p></li><li><p><strong>Bypass security
        filters</strong> by relaying emails
        internally.</p></li><li><p><strong>Get blacklisted</strong> by email
        providers due to spam activity.</p></li><li><p><strong>Aid in data
        exfiltration</strong> by forwarding sensitive emails outside the
        organization.</p></li></ul>
      remediation: >-
        <ul><li><p><strong>Restrict Mail Relay to Trusted
        Hosts</strong></p></li><li><p><strong>Enforce
        authentication</strong></p></li><li><p><strong>Disable Anonymous Mail
        Relay</strong></p></li><li><p><strong>Enable Logging to Detect
        Abuse</strong></p></li></ul>
      references: []
      customFields: []
  category: Internal Pentest

- cvssv3: 'CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N'
  priority: 2
  remediationComplexity: 1
  details:
    - locale: EN
      title: Resource Based Constrained Delegation (RBCD) Attacks
      vulnType: Pentest
      description: >-
        <p>Resource-Based Constrained Delegation (RBCD) allows a service on one
        computer to authenticate as a user to another computer. It is commonly
        used for service-to-service authentication in Active Directory
        environments.</p><p>If misconfigured, attackers can abuse RBCD to
        escalate privileges and move laterally within the
        network.</p><p><strong>Security Risks of Misconfigured
        RBCD</strong></p><ul><li><p><strong>Privilege Escalation</strong> –
        Attackers can impersonate privileged users e.g. a Domain
        Admin.</p></li><li><p><strong>Lateral Movement</strong> – An attacker
        who compromises one machine can pivot to
        others.</p></li><li><p><strong>Persistence</strong> – Attackers can
        create rogue computer objects and grant themselves delegation
        rights.</p></li></ul>
      remediation: >-
        <p>Set the ms-DS-MachineAccountQuota value of the domain to 0.<br>Remove
        the Authenticated Users group from the Default Domain Controllers policy
        to add to computer objects to the domain.<br></p><img
        class="custom-image" src="67dd199d9979c84ef3f170bd" alt="Setting to
        allow adding computer objects to the domain">
      references:
        - >-
          https://luemmelsec.github.io/S4fuckMe2selfAndUAndU2proxy-A-low-dive-into-Kerberos-delegations/
      customFields: []
  category: Internal Pentest

